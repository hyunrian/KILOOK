<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- Connection Pool 등록 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" 
			value="oracle.jdbc.driver.OracleDriver"/>	
		<property name="url" 
			value="jdbc:oracle:thin:@192.168.0.117:1521:xe"/>
		<property name="username" value="teampro"/>
		<property name="password" value="0121"/>
	</bean>
	
	<!-- 커넥션풀로 설정파일 읽는 빈 등록 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/> <!-- ref="커넥션풀 아이디" -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"/>
	</bean>
	
	<!-- try~catch 할 빈 등록 -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>	
	</bean>	
	
	<!-- 트랜잭션 관리 역할 등록 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/> <!-- connection pool에 등록해놓은 dataSource -->
	</bean>
		
	<!--
	@Transactional 
	애너테이션에 기반한 transaction 처리가 가능하도록 설정. 
	하단의 Namespaces에서 tx 체크해야함 -->
	<tx:annotation-driven/>
		
</beans>
